# **what?**
# Runs integration tests.

# **why?**
# Ensure code runs as expected.

# **when?**
# This will run for all PRs, when code is pushed to a main branch
# branch, and when manually triggered.

name: Adapter Integration Tests
on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  pull_request:
    branches:
      - 'stale*' # Currently setting this inactive as Fabric Spark adapter does not SPN auth.

# explicitly turn off permissions for `GITHUB_TOKEN`
permissions: read-all

# will cancel previous workflows triggered by the same event and for the same ref for PRs or same SHA otherwise
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ contains(github.event_name, 'pull_request_target') && github.event.pull_request.head.ref || github.sha }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash
jobs:
  test:
    name: ${{ matrix.test }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test:
          - "az_spn"
    steps:
      - name: AZ CLI login
        run: az login --service-principal --username="${AZURE_CLIENT_ID}" --password="${AZURE_CLIENT_SECRET}" --tenant="${AZURE_TENANT_ID}"
        env:
            AZURE_CLIENT_ID: ${{ secrets.DBT_FABRIC_SPARK_CLIENT_ID }}
            AZURE_CLIENT_SECRET: ${{ secrets.DBT_FABRIC_SPARK_CLIENT_SECRET }}
            AZURE_TENANT_ID: ${{ secrets.DBT_FABRIC_SPARK_TENANT_ID }}

      - uses: actions/checkout@v4
      - name: Install dependencies
        run: pip install -r dev_requirements.txt

      - name: Run functional tests
        env:
            DBT_FABRIC_SPARK_WORKSPACE_ID: ${{ secrets.DBT_FABRIC_SPARK_WORKSPACE_ID }}
            DBT_FABRIC_SPARK_LAKEHOUSE_ID: ${{ secrets.DBT_FABRIC_SPARK_LAKEHOUSE_ID }}
            DBT_FABRIC_SPARK_CLIENT_ID: ${{ secrets.DBT_FABRIC_SPARK_CLIENT_ID }}
            DBT_FABRIC_SPARK_CLIENT_SECRET: ${{ secrets.DBT_FABRIC_SPARK_CLIENT_SECRET }}
            DBT_FABRIC_SPARK_TENANT_ID: ${{ secrets.DBT_FABRIC_SPARK_TENANT_ID }}
        run: pytest -ra -v tests/functional --profile "${{ matrix.test }}"
